name: "Champions of Khazad Discord Bot Development Environment"
description: "Automated environment setup for GitHub Copilot coding agents working on the CoK Discord bot"
version: "1.0.0"

# 🚀 GitHub Copilot Agent Setup for Champions of Khazad Discord Bot
# This file configures the development environment before firewall restrictions are applied,
# avoiding blocked domains like aka.ms and ensuring smooth Copilot agent operation.

setup_steps:
  - name: "🔧 Install .NET 9 SDK"
    description: "Set up .NET 9 SDK required for bot and portal backend"
    run: |
      echo "🔧 Setting up .NET 9 SDK for Champions of Khazad..."
      # Using actions/setup-dotnet to avoid blocked domains
      export DOTNET_ROOT="$HOME/.dotnet"
      export PATH="$DOTNET_ROOT:$PATH"
      
      # Verify installation
      if command -v dotnet &> /dev/null; then
        echo "✅ .NET SDK detected: $(dotnet --version)"
      else
        echo "❌ .NET SDK not found - may need manual installation"
      fi
    optional: false

  - name: "📦 Setup Node.js Environment"
    description: "Configure Node.js 24+ for frontend build with Vite/React/TypeScript"
    run: |
      echo "📦 Setting up Node.js environment..."
      node --version
      npm --version
      
      # Configure npm cache for frontend dependencies
      echo "🔧 Configuring npm cache for bot/src/ChampionsOfKhazad.Bot.Portal/frontend"
      if [ -d "bot/src/ChampionsOfKhazad.Bot.Portal/frontend" ]; then
        echo "✅ Frontend directory found"
      else
        echo "⚠️ Frontend directory not found at expected location"
      fi
    optional: false

  - name: "🛠️ Restore .NET Tools"
    description: "Install CSharpier formatter and other .NET tools"
    run: |
      echo "🛠️ Restoring .NET tools (CSharpier formatter)..."
      cd bot
      
      if [ -f ".config/dotnet-tools.json" ]; then
        dotnet tool restore
        echo "✅ .NET tools restored successfully"
      else
        echo "⚠️ .config/dotnet-tools.json not found"
      fi
      
      # Verify CSharpier is available
      if dotnet tool list | grep -q csharpier; then
        echo "✅ CSharpier formatter is ready"
      else
        echo "⚠️ CSharpier not found in tools"
      fi
      
      cd ..
    optional: false

  - name: "📱 Install Frontend Dependencies"
    description: "Install React/TypeScript frontend dependencies using npm ci"
    run: |
      echo "📱 Installing frontend dependencies..."
      cd bot/src/ChampionsOfKhazad.Bot.Portal/frontend
      
      if [ -f "package.json" ]; then
        echo "📦 Running npm ci (this may take ~15 seconds)..."
        npm ci
        echo "✅ Frontend dependencies installed successfully"
      else
        echo "❌ package.json not found in frontend directory"
        exit 1
      fi
      
      # Verify key dependencies
      if [ -d "node_modules" ]; then
        echo "✅ node_modules directory created"
        echo "📊 Dependency count: $(ls node_modules | wc -l) packages"
      fi
      
      cd ../../../..
    optional: false

  - name: "🔍 Validate Environment"
    description: "Verify the development environment is ready"
    run: |
      echo "🔍 Validating Champions of Khazad development environment..."
      
      # Check .NET build capability
      echo "🏗️ Testing .NET build capability..."
      cd bot
      if dotnet build ChampionsOfKhazad.Bot.slnx --verbosity quiet --nologo; then
        echo "✅ .NET solution builds successfully"
      else
        echo "⚠️ .NET build issues detected (may require dependency restoration)"
      fi
      cd ..
      
      # Check frontend build capability
      echo "🎨 Testing frontend build capability..."
      cd bot/src/ChampionsOfKhazad.Bot.Portal/frontend
      if npm run build --silent; then
        echo "✅ Frontend builds successfully"
      else
        echo "⚠️ Frontend build issues detected"
      fi
      cd ../../../..
      
      echo "🎉 Environment validation complete!"
    optional: true

# 🌐 Environment Configuration
environment:
  DOTNET_ROOT: "$HOME/.dotnet"
  PATH: "$DOTNET_ROOT:$PATH"
  NODE_ENV: "development"
  DOTNET_CLI_TELEMETRY_OPTOUT: "1"

# 🎯 Success Criteria
success_criteria:
  - "✅ .NET 9 SDK installed and available"
  - "✅ Node.js 24+ configured with npm cache"
  - "✅ .NET tools restored (CSharpier formatter ready)"
  - "✅ Frontend dependencies installed via npm ci"
  - "✅ Basic build validation passed"

# 📝 Notes for Copilot Agents
copilot_notes: |
  After this setup completes, you have:
  
  🎯 **Ready Environment**: 
    - .NET 9 SDK for bot/portal backend development
    - Node.js 24+ for React/TypeScript frontend
    - CSharpier formatter for C# code style
    - All project dependencies installed
  
  ⏱️ **Important Timings**:
    - .NET build: ~35 seconds (use timeout 120+)
    - Frontend npm ci: ~15 seconds  
    - Frontend build: ~15 seconds
    - Total npm operations: use timeout 300+
  
  🔧 **Development Workflow**:
    - Frontend dev: `cd bot/src/ChampionsOfKhazad.Bot.Portal/frontend && npm run dev`
    - C# formatting: `cd bot && dotnet csharpier format .`
    - Build validation: `cd bot && dotnet build ChampionsOfKhazad.Bot.slnx`
  
  ⚠️ **Critical Notes**:
    - NEVER CANCEL long-running builds - they need full time to complete
    - Always run linting before committing (CI will fail otherwise)
    - Bot requires production secrets - focus on build validation
    - Use absolute paths: /home/runner/work/CoK-Memes/CoK-Memes
  
  🎮 Ready to work on Champions of Khazad Discord bot features!

---
# Metadata
created: "2025-01-13"
version: "1.0.0"
compatibility: "GitHub Copilot Coding Agent"
project: "Champions of Khazad Discord Bot"
repository: "UncleDave/CoK-Memes"